{
  "definition": {
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {},
    "triggers": {
      "manual": {
        "type": "Request",
        "kind": "Http",
        "inputs": {
          "schema": {
            "type": "object",
            "properties": {
              "service_now_url": {"type": "string"},
              "title": {"type": "string"},
              "description": {"type": "string"},
              "severity": {"type": "string"},
              "service": {"type": "string"},
              "assigned_to": {"type": "string"}
            },
            "required": ["title", "description", "severity", "service"]
          }
        }
      }
    },
    "actions": {
      "Initialize_Service_Mapping": {
        "type": "InitializeVariable",
        "inputs": {
          "variables": [
            {
              "name": "ServiceMapping",
              "type": "object",
              "value": {
                "api-gateway": {
                  "assignment_group": "API Team",
                  "category": "Infrastructure",
                  "subcategory": "API Gateway"
                },
                "user-service": {
                  "assignment_group": "Backend Team", 
                  "category": "Application",
                  "subcategory": "User Management"
                },
                "database-primary": {
                  "assignment_group": "DBA Team",
                  "category": "Infrastructure", 
                  "subcategory": "Database"
                },
                "web-frontend": {
                  "assignment_group": "Frontend Team",
                  "category": "Application",
                  "subcategory": "User Interface"
                }
              }
            }
          ]
        }
      },
      "Get_Service_Config": {
        "type": "Compose",
        "inputs": "@coalesce(variables('ServiceMapping')[triggerBody()?['service']], json('{\"assignment_group\": \"Default Team\", \"category\": \"Infrastructure\", \"subcategory\": \"General\"}'))",
        "runAfter": {
          "Initialize_Service_Mapping": ["Succeeded"]
        }
      },
      "Set_Priority": {
        "type": "InitializeVariable",
        "inputs": {
          "variables": [
            {
              "name": "Priority",
              "type": "string", 
              "value": "@{if(equals(triggerBody()?['severity'], 'high'), '1', if(equals(triggerBody()?['severity'], 'medium'), '2', '3'))}"
            }
          ]
        },
        "runAfter": {
          "Get_Service_Config": ["Succeeded"]
        }
      },
      "Create_ServiceNow_Incident": {
        "type": "ApiConnection",
        "inputs": {
          "host": {
            "connectionName": "shared_servicenow",
            "operationId": "CreateRecord",
            "apiId": "/providers/Microsoft.PowerApps/apis/shared_servicenow"
          },
          "parameters": {
            "table": "incident",
            "item": {
              "short_description": "@triggerBody()?['title']",
              "description": "@{triggerBody()?['description']}\n\nAuto-generated by Incident Response Chatbot\nService: @{triggerBody()?['service']}\nTimestamp: @{utcNow()}\nDashboard: http://localhost:3000?service=@{triggerBody()?['service']}",
              "priority": "@variables('Priority')",
              "impact": "@variables('Priority')",
              "urgency": "@variables('Priority')",
              "category": "@{outputs('Get_Service_Config')['category']}",
              "subcategory": "@{outputs('Get_Service_Config')['subcategory']}",
              "assignment_group": "@{outputs('Get_Service_Config')['assignment_group']}",
              "assigned_to": "@{if(empty(triggerBody()?['assigned_to']), '', triggerBody()?['assigned_to'])}",
              "caller_id": "incident.response.bot@company.com",
              "contact_type": "monitoring",
              "state": "2",
              "work_notes": "Incident detected by monitoring system. Correlation analysis available in chatbot dashboard."
            }
          }
        },
        "runAfter": {
          "Set_Priority": ["Succeeded"]
        }
      },
      "Get_Ticket_Number": {
        "type": "Compose",
        "inputs": "@body('Create_ServiceNow_Incident')?['number']",
        "runAfter": {
          "Create_ServiceNow_Incident": ["Succeeded"]
        }
      },
      "Send_Confirmation_to_Teams": {
        "type": "Http",
        "inputs": {
          "method": "POST",
          "uri": "https://outlook.office.com/webhook/YOUR-TEAMS-WEBHOOK-URL",
          "headers": {
            "Content-Type": "application/json"
          },
          "body": {
            "type": "message",
            "attachments": [
              {
                "contentType": "application/vnd.microsoft.card.adaptive",
                "content": {
                  "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                  "type": "AdaptiveCard",
                  "version": "1.2",
                  "body": [
                    {
                      "type": "TextBlock",
                      "text": "ðŸŽ« Ticket Created Successfully",
                      "weight": "Bolder",
                      "size": "Medium",
                      "color": "good"
                    },
                    {
                      "type": "FactSet",
                      "facts": [
                        {
                          "title": "Ticket Number",
                          "value": "@{outputs('Get_Ticket_Number')}"
                        },
                        {
                          "title": "Service",
                          "value": "@{triggerBody()?['service']}"
                        },
                        {
                          "title": "Priority", 
                          "value": "P@{variables('Priority')}"
                        },
                        {
                          "title": "Assigned To",
                          "value": "@{outputs('Get_Service_Config')['assignment_group']}"
                        }
                      ]
                    },
                    {
                      "type": "TextBlock",
                      "text": "@{triggerBody()?['title']}",
                      "wrap": true,
                      "weight": "Bolder"
                    }
                  ],
                  "actions": [
                    {
                      "type": "Action.OpenUrl",
                      "title": "View Ticket",
                      "url": "https://yourinstance.service-now.com/nav_to.do?uri=incident.do?sys_id=@{body('Create_ServiceNow_Incident')?['sys_id']}"
                    },
                    {
                      "type": "Action.OpenUrl", 
                      "title": "View Dashboard",
                      "url": "http://localhost:3000?service=@{triggerBody()?['service']}"
                    }
                  ]
                }
              }
            ]
          }
        },
        "runAfter": {
          "Get_Ticket_Number": ["Succeeded"]
        }
      },
      "Update_Chatbot_Status": {
        "type": "Http",
        "inputs": {
          "method": "POST",
          "uri": "http://localhost:8000/power-automate/ticket-created",
          "headers": {
            "Content-Type": "application/json"
          },
          "body": {
            "service": "@triggerBody()?['service']",
            "ticket_id": "@{outputs('Get_Ticket_Number')}",
            "ticket_url": "https://yourinstance.service-now.com/nav_to.do?uri=incident.do?sys_id=@{body('Create_ServiceNow_Incident')?['sys_id']}",
            "assigned_to": "@{outputs('Get_Service_Config')['assignment_group']}",
            "priority": "@variables('Priority')",
            "created_at": "@{utcNow()}"
          }
        },
        "runAfter": {
          "Send_Confirmation_to_Teams": ["Succeeded"]
        }
      },
      "Schedule_Follow_Up": {
        "type": "ApiConnection",
        "inputs": {
          "host": {
            "connectionName": "shared_office365",
            "operationId": "CreateTask",
            "apiId": "/providers/Microsoft.PowerApps/apis/shared_office365"
          },
          "parameters": {
            "folderPath": "Tasks",
            "item": {
              "Subject": "Follow up on incident @{outputs('Get_Ticket_Number')} - @{triggerBody()?['service']}",
              "Body": "Check status of incident ticket @{outputs('Get_Ticket_Number')} for service @{triggerBody()?['service']}.\n\nTicket URL: https://yourinstance.service-now.com/nav_to.do?uri=incident.do?sys_id=@{body('Create_ServiceNow_Incident')?['sys_id']}\nDashboard: http://localhost:3000?service=@{triggerBody()?['service']}",
              "DueDateTime": "@{addMinutes(utcNow(), if(equals(variables('Priority'), '1'), 30, if(equals(variables('Priority'), '2'), 60, 120)))}",
              "Importance": "@{if(equals(variables('Priority'), '1'), 'high', 'normal')}",
              "ReminderDateTime": "@{addMinutes(utcNow(), if(equals(variables('Priority'), '1'), 15, if(equals(variables('Priority'), '2'), 30, 60)))}"
            }
          }
        },
        "runAfter": {
          "Update_Chatbot_Status": ["Succeeded"]
        }
      },
      "Response": {
        "type": "Response",
        "inputs": {
          "statusCode": 200,
          "body": {
            "status": "created",
            "ticket_id": "@{outputs('Get_Ticket_Number')}",
            "ticket_url": "https://yourinstance.service-now.com/nav_to.do?uri=incident.do?sys_id=@{body('Create_ServiceNow_Incident')?['sys_id']}",
            "priority": "@variables('Priority')",
            "assigned_to": "@{outputs('Get_Service_Config')['assignment_group']}"
          }
        },
        "runAfter": {
          "Schedule_Follow_Up": ["Succeeded"]
        }
      }
    }
  },
  "parameters": {}
}